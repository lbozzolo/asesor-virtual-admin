rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function userDoc(uid) { return get(/databases/$(database)/documents/users/$(uid)); }
    function hasRole(roles) { return isSignedIn() && userDoc(request.auth.uid).data.role in roles; }
    function isSelf(userId) { return isSignedIn() && request.auth.uid == userId; }

    match /users/{userId} {
      allow create: if isSelf(userId);
      allow read: if isSelf(userId) || hasRole(['admin','superadmin']);
      allow update: if isSelf(userId);
      allow delete: if false;
    }

    match /conversations/{conversationId} {
      allow read: if hasRole(['operador','admin','superadmin']);
      allow create, update: if hasRole(['operador','admin','superadmin']);
      allow delete: if hasRole(['admin','superadmin']);
    }

    match /{document=**} { allow read, write: if false; }
  }
}
